name: Build images & deploy to staging

on:
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    paths-ignore:
      - docs
  pull_request:
    branches:
      - main
    paths-ignore:
      - docs

jobs:
  build-and-push-images:
    name: Build and push images
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - directory: frontend
            image: ghcr.io/${{ github.repository }}/frontend
            build-args: |
              APP_ENVIRONMENT=production
          - directory: backend
            image: ghcr.io/${{ github.repository }}/backend
            build-args: ""

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.directory }}
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ matrix.build-args }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set image tag output
        id: set-output
        run: |
          SHA_TAG=$(echo "${{ steps.meta.outputs.tags }}" | grep -E 'sha-[a-fA-F0-9]{7}')
          echo "${{ matrix.directory }}-tag=$SHA_TAG" >> $GITHUB_OUTPUT
          echo Tagged image: $SHA_TAG

    outputs:
      backend-tag: ${{ steps.set-output.outputs.backend-tag }}
      frontend-tag: ${{ steps.set-output.outputs.frontend-tag }}

  # deploy-to-staging:
  #   name: Deploy to staging
  #   runs-on: ubuntu-latest

  #   needs: build-and-push-images
  #   if: github.event_name == 'push'

  #   defaults:
  #     run:
  #       working-directory: kubernetes/overlays/staging

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up kubectl
  #       uses: azure/setup-kubectl@v4

  #     - name: Set up kustomize
  #       uses: imranismail/setup-kustomize@v2

  #     - name: Configure Kubeconfig
  #       uses: azure/k8s-set-context@v4
  #       with:
  #         method: kubeconfig
  #         kubeconfig: ${{ secrets.KUBECONFIG }}

  #     - name: Set image tags
  #       run: |
  #         kustomize edit set image research-cruise-app-backend=${{ needs.build-and-push-images.outputs.backend-tag }}
  #         kustomize edit set image research-cruise-app-frontend=${{ needs.build-and-push-images.outputs.frontend-tag }}

  #     - name: Configure secrets
  #       run: |
  #         echo "ConnectionStrings__Database=${{ secrets.DB }}" >> ../../base/backend/.env
  #         echo "JWT__Secret=${{ secrets.JWT_SECRET }}" >> ../../base/backend/.env

  #     - name: Deploy to staging
  #       run: |
  #         kubectl apply -k .
